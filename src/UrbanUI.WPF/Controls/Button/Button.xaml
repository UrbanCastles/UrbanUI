<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UrbanUI.WPF.Controls"
                    xmlns:controls="clr-namespace:UrbanUI.WPF.Controls"
                    xmlns:converter="clr-namespace:UrbanUI.WPF.Converters">

    <converter:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>


    <ControlTemplate x:Key="FlatButtonControlTemplateStyle" TargetType="{x:Type local:Button}">

        <local:ClipBorder x:Name="PART_mainBorder"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Background="{TemplateBinding Background}">

            <StackPanel Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <controls:PathIconControl x:Name="PART_iconControl" 
                                                      Width="{TemplateBinding PathIconWidth}" 
                                                      Height="{TemplateBinding PathIconHeight}" 
                                                      VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                      IsEnabled="{TemplateBinding IsEnabled}"  
                                                      Path="{TemplateBinding IconPath}"
                                                      Margin="{TemplateBinding IconMargin}"
                                                      Color="{TemplateBinding IconColor}"
                                                      Visibility="{TemplateBinding IconPath, Converter={StaticResource StringToVisibilityConverter}}"/>

                <ContentPresenter x:Name="PART_contentHost" 
                                              Focusable="False"
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextDecorations" Value="{Binding Path=TextStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
            </StackPanel>

        </local:ClipBorder>

        <ControlTemplate.Triggers>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_contentHost" Property="TextElement.Foreground" Value="{Binding Path=DisabledForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}" />
                <Setter TargetName="PART_mainBorder" Property="Background" Value="{Binding Path=DisabledBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}" />
                <Setter TargetName="PART_iconControl" Property="Color" Value="{Binding Path=DisabledIconColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_contentHost" Property="TextElement.Foreground" Value="{Binding Path=MouseEnterForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}" />
                <Setter TargetName="PART_mainBorder" Property="Background" Value="{Binding Path=MouseEnterBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}"/>
                <Setter TargetName="PART_iconControl" Property="Color" Value="{Binding Path=MouseEnterIconColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="PART_mainBorder" Property="Background" Value="{Binding Path=MousePressedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}"/>
                <Setter TargetName="PART_iconControl" Property="Color" Value="{Binding Path=PressedIconColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}"/>
                <Setter TargetName="PART_iconControl" Property="Path" Value="{Binding Path=PressedIconPath, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}"/>
            </Trigger>
            <DataTrigger Binding="{Binding PressedIconPath}" Value="{x:Null}">
                <Setter TargetName="PART_iconControl" Property="Path" Value="{Binding Path=IconPath, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Button}}}"/>
            </DataTrigger>

            <Trigger Property="IconPath" Value="{x:Null}">
                <Setter TargetName="PART_iconControl" Property="Margin" Value="0" />
            </Trigger>



            <!--  TRANSPARENT  -->
            <Trigger Property="ButtonAppearance" Value="Transparent">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="MousePressedForeground" Value="White" />
                <Setter Property="MouseEnterBackground" Value="#22000000" />
                <Setter Property="MousePressedBackground" Value="#44000000" />
                <Setter Property="IconColor" Value="White" />
                <Setter Property="MouseEnterIconColor" Value="White" />
                <Setter Property="PressedIconColor" Value="White" />
            </Trigger>

            <!--  PRIMARY  -->
            <Trigger Property="ButtonAppearance" Value="Primary">
                <Setter Property="Background" Value="#337ab7" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="MousePressedForeground" Value="White" />
                <Setter Property="MouseEnterBackground" Value="#2e6da4" />
                <Setter Property="MousePressedBackground" Value="#095C7A" />
                <Setter Property="IconColor" Value="White" />
                <Setter Property="MouseEnterIconColor" Value="White" />
                <Setter Property="PressedIconColor" Value="White" />
            </Trigger>

            <!--  SECONDARY  -->
            <Trigger Property="ButtonAppearance" Value="Secondary">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#3c96db" />
                <Setter Property="MousePressedForeground" Value="#50A0DD" />
                <Setter Property="MouseEnterBackground" Value="#22000000" />
                <Setter Property="MousePressedBackground" Value="#44000000" />
                <Setter Property="IconColor" Value="#3c96db" />
                <Setter Property="MouseEnterIconColor" Value="#3c96db" />
                <Setter Property="PressedIconColor" Value="#50A0DD" />
            </Trigger>

            <!--  SUCCESS  -->
            <Trigger Property="ButtonAppearance" Value="Success">
                <Setter Property="Background" Value="#5cb85c" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="MousePressedForeground" Value="White" />
                <Setter Property="MouseEnterBackground" Value="#4cae4c" />
                <Setter Property="MousePressedBackground" Value="#2C862C" />
                <Setter Property="IconColor" Value="White" />
                <Setter Property="MouseEnterIconColor" Value="White" />
                <Setter Property="PressedIconColor" Value="White" />
            </Trigger>

            <!--  INFORMATION  -->
            <Trigger Property="ButtonAppearance" Value="Information">
                <Setter Property="Background" Value="#5bc0de" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="MousePressedForeground" Value="White" />
                <Setter Property="MouseEnterBackground" Value="#46b8da" />
                <Setter Property="MousePressedBackground" Value="#3489A3" />
                <Setter Property="IconColor" Value="White" />
                <Setter Property="MouseEnterIconColor" Value="White" />
                <Setter Property="PressedIconColor" Value="White" />
            </Trigger>

            <!--  WARNING  -->
            <Trigger Property="ButtonAppearance" Value="Warning">
                <Setter Property="Background" Value="#f0ad4e" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="MousePressedForeground" Value="White" />
                <Setter Property="MouseEnterBackground" Value="#eea236" />
                <Setter Property="MousePressedBackground" Value="#C4852C" />
                <Setter Property="IconColor" Value="White" />
                <Setter Property="MouseEnterIconColor" Value="White" />
                <Setter Property="PressedIconColor" Value="White" />
            </Trigger>

            <!--  DANGER  -->
            <Trigger Property="ButtonAppearance" Value="Danger">
                <Setter Property="Background" Value="#d9534f" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="MousePressedForeground" Value="White" />
                <Setter Property="MouseEnterBackground" Value="#d43f3a" />
                <Setter Property="MousePressedBackground" Value="#BC3834" />
                <Setter Property="IconColor" Value="White" />
                <Setter Property="MouseEnterIconColor" Value="White" />
                <Setter Property="PressedIconColor" Value="White" />
            </Trigger>

            <!--  LIGHT  -->
            <Trigger Property="ButtonAppearance" Value="Light">
                <Setter Property="Background" Value="#f0f0f0" />
                <Setter Property="Foreground" Value="#333" />
                <Setter Property="MousePressedForeground" Value="#333" />
                <Setter Property="MouseEnterBackground" Value="#DFDFDF" />
                <Setter Property="MousePressedBackground" Value="#D8D7D7" />
                <Setter Property="IconColor" Value="#333" />
                <Setter Property="MouseEnterIconColor" Value="#333" />
                <Setter Property="PressedIconColor" Value="#333" />
            </Trigger>

            <!--  DARK  -->
            <Trigger Property="ButtonAppearance" Value="Dark">
                <Setter Property="Background" Value="#343434" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="MousePressedForeground" Value="White" />
                <Setter Property="MouseEnterBackground" Value="#2D2D2D" />
                <Setter Property="MousePressedBackground" Value="#272727" />
                <Setter Property="IconColor" Value="White" />
                <Setter Property="MouseEnterIconColor" Value="White" />
                <Setter Property="PressedIconColor" Value="White" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style TargetType="{x:Type local:Button}" x:Key="UrbanUI.WPF.FlatButtonUIStyle">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource FlatButtonControlTemplateStyle}">
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource UrbanUI.WPF.FlatButtonUIStyle}" TargetType="{x:Type local:Button}"/>
</ResourceDictionary>